{"version":3,"sources":["components/Home.js","components/TruckList.js","components/Truck.js","components/LoadList.js","components/Load.js","components/DispatchList.js","components/Dispatch.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","type","placeholder","to","src","alt","width","Component","axios","defaults","xsrfCookieName","xsrfHeaderName","TruckList","state","trucklist","newTruckList","getTruckList","get","then","response","foundTruckList","data","setState","toggleCreateForm","newShowCreateForm","showCreateForm","updateTruck","event","updatedNewTruckList","target","name","value","submitCreateTruck","preventDefault","post","document","forms","reset","this","id","onChange","onClick","map","truck","i","key","Truck","fetchTruck","truckId","a","truckResponse","load","loads","console","log","error","message","props","match","params","trailertype","trailernum","hours","Phone","trucknum","drivernum","email","LoadList","loadlist","newLoadList","getLoadList","foundLoadList","updateLoad","updatedNewLoadList","submitCreateLoad","pickuploc","Load","fetchLoad","loadId","loadResponse","trucks","loadnum","pickupnum","deliverynum","pickuptime","deliverytime","rate","miles","deliveryloc","droppick","dropdel","DispatchList","dispatchlist","newDispatchList","getDispatchList","foundDispatchList","updateDispatch","updatedNewDispatchList","submitCreateDispatch","dispatch","loadinfo","Dispatch","truckinfo","fetchDispatch","dispatchId","dispatchResponse","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.08d124a9.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\nimport React, { Component } from 'react'\n\n\nexport default class Home extends Component {\n    render() {\n        return (\n            \n            <div className=\"homeContainer\">\n                <div className=\"homeHeader\">\n                    <div className=\"Title\">\n                        <h1>Providence Transport</h1>\n                    </div>\n                    <div className=\"locater\">\n                        <input type=\"text\" placeholder=\"Enter Location\" />\n                    </div>\n                    <div className=\"locater2\">\n                        <input type=\"text\" placeholder=\"Enter Radius\" />\n                    </div>\n                    \n                </div>\n                <div className=\"About\">\n                    <h3>About Us</h3>\n                    <p>Providence lets you manage routes for trucks, buses, delivery vehicles, and more. Instead of manually calling drivers to see where they are, Providence lets you instantly track vehicle location, route progress, and late or missed stops.</p>\n                    <p>Let customers and outside stakeholders track route progress and receive alerts automatically. Authorized users can anticipate arrivals or delays, which improves customer service, reduces calls, and can become a differentiator for your business.</p>\n                    <p>Adapt on the go by remotely re-routing vehicles and sending messages to drivers through the Providence Driver app.</p>\n                </div>\n                <div className=\"homeBody\">\n                    <div className=\"homeImg\">\n                        <div className=\"truckImg\">\n                            <div>\n                                <Link to=\"/truck\">\n                                    <img src=\"https://t4.ftcdn.net/jpg/03/01/80/43/240_F_301804370_bRziBCscumx272ERewFW8IzHNI5VRGCs.jpg\" alt=\"truck\" width=\"250px\" />\n                                    <div className=\"truckText\"><h4>Find a Truck</h4></div>\n                                </Link>\n                            </div>\n                        </div>\n                        <div className=\"freightImg\">\n                            <div>\n                                <Link to=\"/load\">\n                                    <img src=\"https://img.freepik.com/free-photo/forklift-black-background_110488-911.jpg?size=626&ext=jpg\" alt=\"load\" width=\"250px\" />\n                                    <div className=\"freightText\"><h4>Find a Load</h4></div>\n                                </Link>\n                            </div>\n\n\n                        </div>\n                    </div>\n                </div>\n                <div className=\"homeFooter\">\n                    <div><p>Page created by Clayborn Guess using React, Django REST and PostgreSQL.</p></div>\n                    <div><p>claybornguess@yahoo.com</p></div>\n                    <Link to=\"/dispatch\"> <div className=\"dispatchButton\">\n                    <button>Current Dispatch</button>\n                    </div></Link>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n// import Truck from './Truck'\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nexport default class TruckList extends Component {\n    state = {\n        trucklist: [],\n        newTruckList: {}\n    }\n    getTruckList = () => {\n        axios.get('/api/v1/trucks/').then((response) => {\n            const foundTruckList = response.data;\n            this.setState({\n                trucklist: foundTruckList\n            })\n        })\n    }\n    toggleCreateForm = () => {\n        const newShowCreateForm = !this.state.showCreateForm;\n        this.setState({\n            showCreateForm: newShowCreateForm,\n        });\n    }\n    updateTruck = (event) => {\n        const updatedNewTruckList = { ...this.state.newTruckList };\n        updatedNewTruckList[event.target.name] = event.target.value;\n        this.setState({\n            newTruckList: updatedNewTruckList,\n        });\n    }\n    submitCreateTruck = (event) => {\n        event.preventDefault();\n        axios.post('/api/v1/trucks/', this.state.newTruckList).then(() => {\n            this.toggleCreateForm();\n            this.getTruckList();\n            document.forms['tlform'].reset()\n        });\n    }\n    componentDidMount() {\n        this.getTruckList()\n    }\n    render() {\n        return (\n            <div className=\"truckListWrapper\">\n                <div className=\"truckListHeader\">\n                    <h2>Trucks</h2>\n                </div>\n                <div className=\"truckListMain\">\n                    <div className=\"truckListInput\">\n                        <form id=\"tlform\">\n                            <div className=\"tlinput1\">\n                                <input type=\"text\" name=\"name\" placeholder=\"Driver name\" onChange={this.updateTruck} />\n                            </div>\n                            <div className=\"tlinput2\">\n                                <input type=\"text\" name=\"trailertype\" placeholder=\"Trailer Type\" onChange={this.updateTruck} />\n                            </div>\n                            <div className=\"tlinput3\">\n                                <input type=\"number\" name=\"trailernum\" placeholder=\"Trailer Number\" onChange={this.updateTruck} />\n                            </div>\n                            <div className=\"tlinput4\">\n                                <input type=\"number\" name=\"hours\" placeholder=\"Hours Available\" onChange={this.updateTruck} />\n                            </div>\n                            <div className=\"tlinput5\">\n                                <input type=\"tel\" name=\"Phone\" placeholder=\"Phone\" onChange={this.updateTruck} />\n                            </div>\n                            <div className=\"tlinput6\">\n                                <input type=\"number\" name=\"trucknum\" placeholder=\"Truck Number\" onChange={this.updateTruck} />\n                            </div>\n                            <div className=\"tlinput7\">\n                                <input type=\"number\" name=\"drivernum\" placeholder=\"Driver Number\" onChange={this.updateTruck} />\n                            </div>\n                            <div className=\"tlinput8\">\n                                <input type=\"email\" name=\"email\" placeholder=\"Email\" onChange={this.updateTruck} />\n                            </div>\n                            <button onClick={this.submitCreateTruck}>Submit</button>\n                        </form>\n                    </div>\n                    <div className=\"availableTrucks\">\n                        {\n                            this.state.trucklist.map((truck, i) => {\n                                return (\n                                    <div key={i}>\n                                        <Link className=\"text-link\" to={`/truck/${truck.id}`}>{truck.name}</Link>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n                <div className=\"tlFooter\">\n                    <div><p>Page created by Clayborn Guess using React, Django REST and PostgreSQL.</p></div>\n                    <Link to=\"/\"> <div className=\"dispatchButton\">\n                        <button>Home</button>\n                    </div></Link>\n                    <Link to=\"/dispatch\"> <div className=\"dispatchButton\">\n                        <button>Current Dispatch</button>\n                    </div></Link>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\n\n\nexport default class Truck extends Component {\n    state = {\n        truck: [],\n    }\n    componentDidMount() {\n        const truckId = this.props.match.params.id;\n        this.fetchTruck(truckId)\n    }\n\n    fetchTruck = async (truckId) => {\n        try {\n            const truckResponse = await axios.get(`/api/v1/trucks/${truckId}/`)\n            this.setState({\n                truck: truckResponse.data,\n                load: truckResponse.data.loads,\n            })\n        }\n        catch (error) {\n            console.log(error)\n            this.setState({ error: error.message })\n        }\n    }\n    render() {\n        // console.log(this.state.truck.name)\n        return (\n            <div className=\"truckWrapper\">\n                <div className=\"truckHeader\">\n                    <h2>Truck Detail</h2>\n                </div>\n                <div className=\"truckMain\">\n                    <h3>Driver Name: {this.state.truck.name}</h3>\n                    <h3>Trailer Type:  {this.state.truck.trailertype}</h3>\n                    <h3>Trailer Number:  {this.state.truck.trailernum}</h3>\n                    <h3>Available hours: {this.state.truck.hours}</h3>\n                    <h3>Phone:  {this.state.truck.Phone}</h3>\n                    <h3>Truck Number: {this.state.truck.trucknum}</h3>\n                    <h3>Driver Number:  {this.state.truck.drivernum}</h3>\n                    <h3>email: {this.state.truck.email}</h3>\n                </div>\n                <div className=\"truckFooter\">\n                    <Link to=\"/\"> <div className=\"homeButton\">\n                        <button>Home</button>\n                    </div></Link>\n                    <Link to=\"/truck\"> <div className=\"tlButton\">\n                        <button>Trucks</button>\n                    </div></Link>\n                    <Link to=\"/dispatch\"> <div className=\"dispatchButton\">\n                        <button>Current Dispatch</button>\n                    </div></Link>\n                </div>\n\n            </div>\n        );\n    }\n}","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\n\nexport default class LoadList extends Component {\n    state = {\n        loadlist: [],\n        newLoadList: {}\n    }\n    getLoadList = () => {\n        axios.get('/api/v1/loads/').then((response) => {\n            const foundLoadList = response.data;\n            this.setState({\n                loadlist: foundLoadList\n            })\n        })\n    }\n    toggleCreateForm = () => {\n        const newShowCreateForm = !this.state.showCreateForm;\n        this.setState({\n            showCreateForm: newShowCreateForm,\n        });\n    }\n    updateLoad = (event) => {\n        const updatedNewLoadList = { ...this.state.newLoadList };\n        updatedNewLoadList[event.target.name] = event.target.value;\n        this.setState({\n            newLoadList: updatedNewLoadList,\n        });\n    }\n    submitCreateLoad = (event) => {\n        event.preventDefault();\n        axios.post('/api/v1/loads/', this.state.newLoadList).then(() => {\n            this.toggleCreateForm();\n            this.getLoadList();\n            document.forms['llform'].reset()\n        });\n    }\n    componentDidMount() {\n        this.getLoadList()\n    }\n    render() {\n        return (\n            <div className=\"loadListWrapper\">\n                <div className=\"loadListHeader\">\n                    <h2>Loads</h2>\n                </div>\n                    <form id=\"llform\">\n                <div className=\"loadListMain\">\n                        <div className=\"loadListmain1\">\n                            <div className=\"llinput1\">\n                                <h4>P/U</h4>\n                                <input type=\"datetime-local\" name=\"pickuptime\" onChange={this.updateLoad} />\n                            </div>\n                            <div className=\"llinput2\">\n                                <input type=\"number\" name=\"loadnum\" placeholder=\"Load Number\" onChange={this.updateLoad} />\n                            </div>\n                            <div className=\"llinput3\">\n                                <input type=\"number\" name=\"pickupnum\" placeholder=\"Pick up Number\" onChange={this.updateLoad} />\n                            </div>\n                            <div className=\"llinput4\">\n                                <input type=\"number\" name=\"rate\" placeholder=\"Rate\" onChange={this.updateLoad} />\n                            </div>\n                            <div className=\"llinput5\">\n                                <input type=\"number\" name=\"miles\" placeholder=\"Miles\" onChange={this.updateLoad} />\n                            </div>\n                            <div className=\"llinput6\">\n                                <input type=\"text\" name=\"pickuploc\" placeholder=\"Pick up Location\" onChange={this.updateLoad} />\n                            </div>\n                        </div>\n                        <div className=\"loadListMain2\">\n                            <div className=\"llinput7\">\n                                <h4>Del</h4>\n                                <input type=\"datetime-local\" name=\"deliverytime\" onChange={this.updateLoad} />\n                            </div>\n                            <div className=\"llinput8\">\n                                <input type=\"number\" name=\"deliverynum\" placeholder=\"Delivery Number\" onChange={this.updateLoad} />\n                            </div>\n                            <div className=\"llinput9\">\n                                <input type=\"text\" name=\"deliveryloc\" placeholder=\"Delivery Location\" onChange={this.updateLoad} />\n                            </div>\n                            <div className=\"llinput10\">\n                                <h4>DH / Pick Up</h4>\n                                <input type=\"checkbox\" name=\"droppick\" onChange={this.updateLoad} />\n                            </div>\n                            <div className=\"llinput11\">\n                                <h4>DH / Delivery</h4>\n                                <input type=\"checkbox\" name=\"dropdel\" onChange={this.updateLoad} />\n                            </div>\n                            <button onClick={this.submitCreateLoad}>Submit</button>\n                        </div>\n                        <div className=\"availableLoads\">\n                            {\n                                this.state.loadlist.map((load, i) => {\n                                    return (\n                                        <div key={i}>\n                                            <Link className=\"text-link\" to={`/load/${load.id}`}>{load.pickuploc}</Link>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                </div>\n                    </form>\n                <div className=\"llFooter\">\n                    <div><p>Page created by Clayborn Guess using React, Django REST and PostgreSQL.</p></div>\n                    <Link to=\"/\"> <div className=\"homeButton\">\n                        <button>Home</button>\n                    </div></Link>\n                    <Link to=\"/dispatch\"> <div className=\"dispatchButton\">\n                        <button>Current Dispatch</button>\n                    </div></Link>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\n\nexport default class Load extends Component {\n    state = {\n        load: [],\n    }\n    componentDidMount() {\n        const loadId = this.props.match.params.id;\n        this.fetchLoad(loadId)\n    }\n\n    fetchLoad = async (loadId) => {\n        try {\n            const loadResponse = await axios.get(`/api/v1/loads/${loadId}/`)\n            this.setState({\n                load: loadResponse.data,\n                truck: loadResponse.data.trucks,\n            })\n        }\n        catch (error) {\n            console.log(error)\n            this.setState({ error: error.message })\n        }\n    }\n    render() {\n        return (\n            <div className=\"loadWrapper\">\n                <div className=\"loadHeader\">\n                <h2>Load Detail</h2>\n                </div>\n                <div className=\"loadMain\">\n                    <h3>Load Number:  {this.state.load.loadnum}</h3>\n                    <h3>Pick up Number:  {this.state.load.pickupnum}</h3>\n                    <h3>Delivery Number:  {this.state.load.deliverynum}</h3>\n                    <h3>Pick up Time: {this.state.load.pickuptime}</h3>\n                    <h3>Delivery Time:  {this.state.load.deliverytime}</h3>\n                    <h3>Rate: {this.state.load.rate}</h3>\n                    <h3>Miles:  {this.state.load.miles}</h3>\n                    <h3>Pick up Location: {this.state.load.pickuploc}</h3>\n                    <h3>Delivery Location: {this.state.load.deliveryloc}</h3>\n                    <h3>DH/pick:  {this.state.load.droppick}</h3>\n                    <h3>DH/delivery:  {this.state.load.dropdel}</h3>\n                </div>\n                <div className=\"loadFooter\">\n                    <Link to=\"/\"> <div className=\"homeButton\">\n                        <button>Home</button>\n                    </div></Link>\n                    <Link to=\"/load\"> <div className=\"llButton\">\n                        <button>Loads</button>\n                    </div></Link>\n                    <Link to=\"/dispatch\"> <div className=\"dispatchButton\">\n                        <button>Current Dispatch</button>\n                    </div></Link>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n// import Truck from './Truck'\n// import Load from './Load'\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nexport default class DispatchList extends Component {\n    state = {\n        dispatchlist: [],\n        newDispatchList: {},\n        loadlist: []\n\n    }\n    // dispatchlist: [],\n    // loadlist: [],\n\n    getDispatchList = () => {\n        axios.get('/api/v1/dispatchs/').then((response) => {\n            const foundDispatchList = response.data;\n            this.setState({\n                dispatchlist: foundDispatchList\n            })\n        })\n    }\n    toggleCreateForm = () => {\n        const newShowCreateForm = !this.state.showCreateForm;\n        this.setState({\n            showCreateForm: newShowCreateForm,\n        });\n    }\n    updateDispatch = (event) => {\n        const updatedNewDispatchList = { ...this.state.newDispatchList };\n        updatedNewDispatchList[event.target.name] = event.target.value;\n        this.setState({\n            newDispatchList: updatedNewDispatchList,\n        });\n    }\n    submitCreateDispatch = (event) => {\n        event.preventDefault();\n        axios.post('/api/v1/dispatchs/', this.state.newDispatchList).then(() => {\n            this.toggleCreateForm();\n            this.getDispatchList();\n        });\n    }\n    // getTruckList = () => {\n    //     axios.get('/api/v1/trucks/').then((response) => {\n    //         const foundTruckList = response.data;\n    //         this.setState({\n    //             trucklist: foundTruckList\n    //         })\n    //     })\n    // }\n    componentDidMount() {\n        this.getDispatchList()\n        // this.getLoadList()\n    }\n\n    render() {\n\n        return (\n            <div className=\"dispatchListWrapper\">\n\n                <div className=\"dispatchListHeader\">\n                    <h2>Dispatch </h2>\n                </div>\n                <div className=\"dispatchListMain\">\n                    {\n                        this.state.dispatchlist.map((dispatch, i) => {\n                            return (\n                                <div key={i}>\n                                    <Link className=\"text-link\" to={`/dispatch/${dispatch.id}`}>{dispatch.loadinfo.pickuploc} to {dispatch.loadinfo.deliveryloc}</Link>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n                <div className=\"dlFooter\">\n                    <div><p>Page created by Clayborn Guess using React, Django REST and PostgreSQL.</p></div>\n                    <Link to=\"/\"> <div className=\"homeButton\">\n                        <button>Home</button>\n                    </div></Link>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nexport default class Dispatch extends Component {\n    state = {\n        dispatch: {\n            truckinfo: {\n                name: '',\n                trailertype: '',\n                trailernum: 0,\n                hours: 0,\n                Phone: 0,\n                trucknum: 0,\n                drivernum: 0,\n                email: '',\n            },\n            loadinfo: {\n                loadnum: 0,\n                pickupnum: 0,\n                deliverynum: 0,\n                pickuptime: 0,\n                deliverytime: 0,\n                rate: 0,\n                miles: 0,\n                pickuploc: '',\n                deliveryloc: '',\n                droppick: false,\n                dropdel: false,\n            },\n            id: 0,\n        },\n\n    }\n    componentDidMount() {\n        const dispatchId = this.props.match.params.id;\n        this.fetchDispatch(dispatchId)\n    }\n\n    fetchDispatch = async (dispatchId) => {\n        try {\n            const dispatchResponse = await axios.get(`/api/v1/dispatchs/${dispatchId}/`)\n            this.setState({\n                dispatch: dispatchResponse.data,\n                truck: dispatchResponse.data.trucks,\n                load: dispatchResponse.data.loads,\n            })\n        }\n        catch (error) {\n            console.log(error)\n            this.setState({ error: error.message })\n        }\n    }\n\n    render() {\n        return (\n\n            <div className=\"dispatchWrapper\">\n                <div className=\"dispatchHeader\">\n                    <h2>Dispatch Detail</h2>\n                </div>\n                <div className=\"dispatchMain\">\n\n                    <div className=\"dispatchTruckInfo\">\n                    <h3>Truck Info</h3>\n                        <h4>Driver Name:  {this.state.dispatch.truckinfo.name}</h4>\n                        <h4>Trailer Type:  {this.state.dispatch.truckinfo.trailertype}</h4>\n                        <h4>Trailer Number:  {this.state.dispatch.truckinfo.trailernum}</h4>\n                        <h4>Available hours: {this.state.dispatch.truckinfo.hours}</h4>\n                        <h4>Phone:  {this.state.dispatch.truckinfo.Phone}</h4>\n                        <h4>Truck Number: {this.state.dispatch.truckinfo.trucknum}</h4>\n                        <h4>Driver Number:  {this.state.dispatch.truckinfo.drivernum}</h4>\n                        <h4>email: {this.state.dispatch.truckinfo.email}</h4>\n                        <button>Create Dispatch</button>\n                    </div>\n                    <div className=\"dispatchLoadInfo\">\n                    <h3>Load Info</h3>\n                        <h4>Load Number:  {this.state.dispatch.loadinfo.loadnum}</h4>\n                        <h4>Pick up Number:  {this.state.dispatch.loadinfo.pickupnum}</h4>\n                        <h4>Delivery Number:  {this.state.dispatch.loadinfo.deliverynum}</h4>\n                        <h4>Pick up Time: {this.state.dispatch.loadinfo.pickuptime}</h4>\n                        <h4>Delivery Time:  {this.state.dispatch.loadinfo.deliverytime}</h4>\n                        <h4>Rate: {this.state.dispatch.loadinfo.rate}</h4>\n                        <h4>Miles:  {this.state.dispatch.loadinfo.miles}</h4>\n                        <h4>Pick up Location: {this.state.dispatch.loadinfo.pickuploc}</h4>\n                        <h4>Delivery Location: {this.state.dispatch.loadinfo.deliveryloc}</h4>\n                        <h4>DH/pick:  {this.state.dispatch.loadinfo.droppick}</h4>\n                        <h4>DH/delivery:  {this.state.dispatch.loadinfo.dropdel}</h4>\n                    </div>\n                </div>\n                <div className=\"dispatchFooter\">\n                    <div><p>Page created by Clayborn Guess using React, Django REST and PostgreSQL.</p></div>\n                    <Link to=\"/\"> <div className=\"homeButton\">\n                        <button>Home</button>\n                    </div></Link>\n                    <Link to=\"/dispatch\"> <div className=\"dispatchButton\">\n                        <button>Current Dispatch</button>\n                    </div></Link>\n                </div>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Home from \"./components/Home\";\nimport TruckList from \"./components/TruckList\";\nimport Truck from \"./components/Truck\";\nimport LoadList from \"./components/LoadList\";\nimport Load from \"./components/Load\";\nimport DispatchList from \"./components/DispatchList\";\nimport Dispatch from \"./components/Dispatch\";\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\" component={Home}/>\n            <Route exact path=\"/truck\" component={TruckList}/>\n            <Route path=\"/truck/:id\" component={Truck}/>\n            <Route exact path=\"/load\" component={LoadList}/>\n            <Route path=\"/load/:id\" component={Load}/>\n            <Route exact path=\"/dispatch\" component={DispatchList}/>\n            <Route path=\"/dispatch/:id\" component={Dispatch}/>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}